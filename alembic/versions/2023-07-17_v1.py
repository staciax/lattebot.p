"""v1

Revision ID: ba6f362d920e
Revises: 
Create Date: 2023-07-17 11:27:01.198127

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = 'ba6f362d920e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    )
    op.create_table(
        'app_commands',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('type', sa.Integer(), nullable=False),
        sa.Column('guild_id', sa.Integer(), nullable=True),
        sa.Column('channel', sa.Integer(), nullable=True),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('used', sa.DateTime(), nullable=False),
        sa.Column('command', sa.String(length=256), nullable=False),
        sa.Column('failed', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('app_commands_author_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('app_commands_pkey')),
    )
    op.create_table(
        'blacklist',
        sa.Column('object_id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('reason', sa.String(length=2000), nullable=True),
        sa.Column('banned_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['object_id'], ['users.id'], name=op.f('blacklist_object_id_fkey')),
        sa.PrimaryKeyConstraint('object_id', name=op.f('blacklist_pkey')),
    )
    op.create_table(
        'notification_settings',
        sa.Column('owner_id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('channel_id', sa.Integer(), nullable=False),
        sa.Column('mode', sa.Integer(), nullable=False),
        sa.Column('enabled', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('notification_settings_owner_id_fkey')),
        sa.PrimaryKeyConstraint('owner_id', name=op.f('notification_settings_pkey')),
    )
    op.create_table(
        'notifications',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('item_id', sa.String(length=36), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.Column('type', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('notifications_owner_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey')),
    )
    op.create_table(
        'riot_accounts',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('puuid', sa.String(length=36), nullable=False),
        sa.Column('name', sa.String(length=16), nullable=True),
        sa.Column('tag', sa.String(length=5), nullable=True),
        sa.Column('region', sa.String(length=16), nullable=False),
        sa.Column('scope', sa.String(length=64), nullable=False),
        sa.Column('token_type', sa.String(length=64), nullable=False),
        sa.Column('expires_at', sa.Integer(), nullable=False),
        sa.Column('id_token', sa.String(length=4096), nullable=False),
        sa.Column('access_token', sa.String(length=4096), nullable=False),
        sa.Column('entitlements_token', sa.String(length=4096), nullable=False),
        sa.Column('ssid', sa.String(length=4096), nullable=False),
        sa.Column('notify', sa.Boolean(), nullable=False),
        sa.Column('incognito', sa.Boolean(), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('display_name', sa.String(length=128), nullable=True),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('riot_accounts_owner_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('riot_accounts_pkey')),
    )
    op.create_table(
        'user_settings',
        sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('locale', sa.String(length=10), nullable=False),
        sa.Column('notification', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_settings_user_id_fkey')),
        sa.PrimaryKeyConstraint('user_id', name=op.f('user_settings_pkey')),
    )
    op.create_table(
        'riot_account_settings',
        sa.Column('user_id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('current_account_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['current_account_id'], ['riot_accounts.id'], name=op.f('riot_account_settings_current_account_id_fkey')
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('riot_account_settings_user_id_fkey')),
        sa.PrimaryKeyConstraint('user_id', name=op.f('riot_account_settings_pkey')),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('riot_account_settings')
    op.drop_table('user_settings')
    op.drop_table('riot_accounts')
    op.drop_table('notifications')
    op.drop_table('notification_settings')
    op.drop_table('blacklist')
    op.drop_table('app_commands')
    op.drop_table('users')
    # ### end Alembic commands ###

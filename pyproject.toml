[tool.pyright]
include = ["core", "cogs"]
exclude = ["**/__pycache__", ".git", ".ruff_cache", ".venv"]
pythonVersion = "3.12"
typeCheckingMode = "basic"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMissingParameterType = "error"
reportMissingTypeArgument = "error"
reportUnusedVariable = "warning"

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [".git", ".ruff_cache", ".venv", "alembic"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade,
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
]

[tool.ruff.format]
quote-style = "single"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
